

#Algo capable de modifier la grille (manque mise en forme// aussi noms des variables inversés juste problématique pour la relecture) 

from matplotlib import pyplot as plt
from random import randint
liste=[]
liste2=[]  


#Création de grille de départ 
def init_aleatoire(size):   
    for k in range(size):
        liste=[]
        for i in range(size):
            liste.append(randint(0,3))
        liste2.append(liste) 
    for i in range(size):
        print(liste2[i])
    return(liste2)
size=int(input("taille du monde "))
init_aleatoire(size)

#donne un nouveau nom à la grille 
grille=liste2



def affichage_grille(grille, nb_type_bonbons):
    plt.imshow(grille, vmin=0, vmax=nb_type_bonbons-1, cmap='jet')
    plt.pause(0.1)
    plt.draw()
    plt.pause(0.1)
    





def detecte_coordonnees_combinaison(grille):
    v=False
    c=0
    l=-1
    i=-1
    while v==False and l<4:
        l+=1
        c=0
        d=0
        t=[]
        if i<2:
            i+=1
        while v==False and c<len (grille)-2 :
            if grille [l][c]==grille [l][c+1]==grille [l][c+2]:
                v=True
                t.append (l)
                t.append (c)
                t.append (l)
                t.append (c+1)
                t.append (l)
                t.append (c+2)
            elif grille [i][d]==grille [i+1][d]==grille [i+2][d]:
                v=True
                t.append (i)
                t.append (d)
                t.append (i+1)
                t.append (d)
                t.append (i+2)
                t.append (d)
            elif grille [i][3]==grille [i+1][3]==grille [i+2][3]:
                v=True
                c=3
                t.append (i)
                t.append (c)
                t.append (i+1)
                t.append (c)
                t.append (i+2)
                t.append (c)
                
            elif grille [i][4]==grille [i+1][4]==grille [i+2][4]:
                v=True
                c=4
                t.append (i)
                t.append (c)
                t.append (i+1)
                t.append (c)
                t.append (i+2)
                t.append (c)
            
            else:
                c+=1
                if d<4:
                    d+=1 
    return (t)            




#test_detecte_coordonnees_combinaison: permettra de répéter le tri 
def test_detecte_coordonnees_combinaison():
    c=False
    if detecte_coordonnees_combinaison(grille)==[]:
        c=True
    return (c)

#Fonction effectuant les modifications sur la grille 
def suppligne (grille): 
    c=detecte_coordonnees_combinaison(grille)
    y_1=c[0]
    x_1=c[1]
    y_2=c[2]
    x_2=c[3]
    y_3=c[4]
    x_3=c[5]
    c_1=y_1
    c_2=y_2
    c_3=y_3
    j_1=y_1+1
    j_2=y_2+1
    j_3=y_3+1
     
    if x_1!=x_2!=x_3:
        while c_1>0 and c_2>0 and c_3>0:
            c_1=c_1-1
            c_2=c_2-1
            c_3=c_3-1
            j_1=j_1-1
            j_2=j_2-1
            j_3=j_3-1
            grille [j_1][x_1]= grille [c_1][x_1]
            grille [j_2][x_2]= grille [c_2][x_2]
            grille [j_3][x_3]= grille [c_3][x_3]
        
        r_1=0
        r_2=0
        r_3=0
        r_1=(randint(0,3))
        r_2=(randint(0,3))
        r_3=(randint(0,3))

        grille [c_1][x_1]= r_1
        grille [c_2][x_2]= r_2
        grille [c_3][x_3]= r_3
    
    else:
        r_1=0
        r_2=0
        r_3=0
        r_1=(randint(0,3))
        r_2=(randint(0,3))
        r_3=(randint(0,3))

        grille [y_1][x_1]= r_1
        grille [y_2][x_2]= r_2
        grille [y_3][x_3]= r_3
    return (grille)


#Ensemble de fonction pour action utilisateur 
#Coordonnées bonbon 1
def coordonnees_x_1(grille):
    x_1=int(input("quel y voulez-vous, pour un bonbon de votre choix ? : "))
    return(x_1)   
def coordonnees_y_1(grille):
    y_1=int(input("quel x voulez-vous, pour un bonbon de votre choix ? : "))
    return(y_1)   
    
#Coordonnées bonbon 2
def coordonnees_x_2(grille):
    x_2=int(input("quel y voulez-vous, pour un deuxième bonbon de votre choix ? : "))
    return(x_2)   
def coordonnees_y_2(grille):
    y_2=int(input("quel x voulez-vous, pour un deuxième bonbon de votre choix ? : "))
    return(y_2) 

#Valeur bonbon 1
def valeur_bonbon_1(grille):
    b_1=0  
    x=coordonnees_x_1 (grille)
    y=coordonnees_y_1 (grille)
    b_1=grille[x][y]
    return(b_1)

#Valeur bonbon 2
def valeur_bonbon_2(grille):
    b_2=0  
    x=coordonnees_x_2 (grille)
    y=coordonnees_y_2 (grille)
    b_2=grille[x][y]
    return(b_2)



"""coordonnees_x_1 (grille)
coordonnees_y_1 (grille)
coordonnees_x_2 (grille)
coordonnees_y_2 (grille)"""


#Changement position bonbon 
def changement(grille):
    b1=0
    b2=0
    b1=valeur_bonbon_1(grille)
    b2=valeur_bonbon_2(grille)
    grille[coordonnees_x_1 (grille)][coordonnees_y_1 (grille)]=b2
    grille[coordonnees_x_2 (grille)][coordonnees_y_2 (grille)]=b1
    return (grille)




#Exécution de l'algo 


#Phase de création de grille 
while test_detecte_coordonnees_combinaison()==False:
    grille=suppligne (grille)


#utilisation de la grille pour utilisateur 

for i in range (2):
    print (affichage_grille(grille, 4))
    grille=changement(grille)
    while test_detecte_coordonnees_combinaison()==False:
        grille=suppligne (grille)
print (affichage_grille(grille, 4))







































#Algo avant modification (celui fait en cours) 

from matplotlib import pyplot as plt
from random import randint
liste=[]
liste2=[]  
def init_aleatoire(size):   
    for k in range(size):
        liste=[]
        for i in range(size):
            liste.append(randint(0,3))
        liste2.append(liste) 
    for i in range(size):
        print(liste2[i])
    return(liste2)
size=int(input("taille du monde "))



init_aleatoire(size)

grille=liste2

#Coordonnées bonbon 1
def coordonnees1(grille):
    b1=[]  
    x=int(input("quel x voulez-vous ? : "))
    y=int(input("quel y voulez-vous ? : "))
    b1.append(x)
    b1.append(y)
    return(b1)

#Coordonnées bonbon 2
def coordonees2(grille):
    b2=[]
    z=int(input("quel z voulez-vous ? : "))
    p=int(input("quel p voulez-vous ? : "))
    b2.append(z)
    b2.append(p)
    return(b2)


#Changement position bonbon 
def changement(grille):
    b1=[]
    b2=[]
    c=[]
    b1=coordonnees1(grille)
    b2=coordonees2(grille)
    c=b1
    b1=b2
    b2=c
    return(b1,b2)



#Fonction affichage:
nb_type_bonbons = 4
def affichage_grille(grille, nb_type_bonbons):
    plt.imshow(grille, vmin=0, vmax=nb_type_bonbons-1, cmap="jet")
    plt.pause(0.1)
    plt.draw()
    plt.pause(0.1)
affichage_grille(grille, nb_type_bonbons)

